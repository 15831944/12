//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ControlPlatformLib.UploadDataMES {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UploadDataMES.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadCCDKPI", ReplyAction="http://tempuri.org/IService/UploadCCDKPIResponse")]
        bool UploadCCDKPI(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadCCDKPI", ReplyAction="http://tempuri.org/IService/UploadCCDKPIResponse")]
        System.Threading.Tasks.Task<bool> UploadCCDKPIAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadCCDAlramInfo", ReplyAction="http://tempuri.org/IService/UploadCCDAlramInfoResponse")]
        bool UploadCCDAlramInfo(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadCCDAlramInfo", ReplyAction="http://tempuri.org/IService/UploadCCDAlramInfoResponse")]
        System.Threading.Tasks.Task<bool> UploadCCDAlramInfoAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClaerKpiData", ReplyAction="http://tempuri.org/IService/ClaerKpiDataResponse")]
        bool ClaerKpiData(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ClaerKpiData", ReplyAction="http://tempuri.org/IService/ClaerKpiDataResponse")]
        System.Threading.Tasks.Task<bool> ClaerKpiDataAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadEquipmentState", ReplyAction="http://tempuri.org/IService/UploadEquipmentStateResponse")]
        bool UploadEquipmentState(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadEquipmentState", ReplyAction="http://tempuri.org/IService/UploadEquipmentStateResponse")]
        System.Threading.Tasks.Task<bool> UploadEquipmentStateAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadEquipmentAlarm", ReplyAction="http://tempuri.org/IService/UploadEquipmentAlarmResponse")]
        bool UploadEquipmentAlarm(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadEquipmentAlarm", ReplyAction="http://tempuri.org/IService/UploadEquipmentAlarmResponse")]
        System.Threading.Tasks.Task<bool> UploadEquipmentAlarmAsync(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadEquipmentYield", ReplyAction="http://tempuri.org/IService/UploadEquipmentYieldResponse")]
        bool UploadEquipmentYield(string parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UploadEquipmentYield", ReplyAction="http://tempuri.org/IService/UploadEquipmentYieldResponse")]
        System.Threading.Tasks.Task<bool> UploadEquipmentYieldAsync(string parameters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ControlPlatformLib.UploadDataMES.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ControlPlatformLib.UploadDataMES.IService>, ControlPlatformLib.UploadDataMES.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool UploadCCDKPI(string parameters) {
            return base.Channel.UploadCCDKPI(parameters);
        }
        
        public System.Threading.Tasks.Task<bool> UploadCCDKPIAsync(string parameters) {
            return base.Channel.UploadCCDKPIAsync(parameters);
        }
        
        public bool UploadCCDAlramInfo(string parameters) {
            return base.Channel.UploadCCDAlramInfo(parameters);
        }
        
        public System.Threading.Tasks.Task<bool> UploadCCDAlramInfoAsync(string parameters) {
            return base.Channel.UploadCCDAlramInfoAsync(parameters);
        }
        
        public bool ClaerKpiData(string parameters) {
            return base.Channel.ClaerKpiData(parameters);
        }
        
        public System.Threading.Tasks.Task<bool> ClaerKpiDataAsync(string parameters) {
            return base.Channel.ClaerKpiDataAsync(parameters);
        }
        
        public bool UploadEquipmentState(string parameters) {
            return base.Channel.UploadEquipmentState(parameters);
        }
        
        public System.Threading.Tasks.Task<bool> UploadEquipmentStateAsync(string parameters) {
            return base.Channel.UploadEquipmentStateAsync(parameters);
        }
        
        public bool UploadEquipmentAlarm(string parameters) {
            return base.Channel.UploadEquipmentAlarm(parameters);
        }
        
        public System.Threading.Tasks.Task<bool> UploadEquipmentAlarmAsync(string parameters) {
            return base.Channel.UploadEquipmentAlarmAsync(parameters);
        }
        
        public bool UploadEquipmentYield(string parameters) {
            return base.Channel.UploadEquipmentYield(parameters);
        }
        
        public System.Threading.Tasks.Task<bool> UploadEquipmentYieldAsync(string parameters) {
            return base.Channel.UploadEquipmentYieldAsync(parameters);
        }
    }
}
